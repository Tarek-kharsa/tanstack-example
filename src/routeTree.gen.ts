/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as SplatRouteImport } from './routes/$'
import { Route as MemberLoginRouteImport } from './routes/member/login'
import { Route as MemberForgot_passwordRouteImport } from './routes/member/forgot_password'
import { Route as MemberDashboardRouteImport } from './routes/member/dashboard'
import { Route as MemberCreate_accountRouteImport } from './routes/member/create_account'
import { Route as MemberActivate_accountRouteImport } from './routes/member/activate_account'

const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const MemberLoginRoute = MemberLoginRouteImport.update({
  id: '/member/login',
  path: '/member/login',
  getParentRoute: () => rootRouteImport,
} as any)
const MemberForgot_passwordRoute = MemberForgot_passwordRouteImport.update({
  id: '/member/forgot_password',
  path: '/member/forgot_password',
  getParentRoute: () => rootRouteImport,
} as any)
const MemberDashboardRoute = MemberDashboardRouteImport.update({
  id: '/member/dashboard',
  path: '/member/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const MemberCreate_accountRoute = MemberCreate_accountRouteImport.update({
  id: '/member/create_account',
  path: '/member/create_account',
  getParentRoute: () => rootRouteImport,
} as any)
const MemberActivate_accountRoute = MemberActivate_accountRouteImport.update({
  id: '/member/activate_account',
  path: '/member/activate_account',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/$': typeof SplatRoute
  '/logout': typeof LogoutRoute
  '/member/activate_account': typeof MemberActivate_accountRoute
  '/member/create_account': typeof MemberCreate_accountRoute
  '/member/dashboard': typeof MemberDashboardRoute
  '/member/forgot_password': typeof MemberForgot_passwordRoute
  '/member/login': typeof MemberLoginRoute
}
export interface FileRoutesByTo {
  '/$': typeof SplatRoute
  '/logout': typeof LogoutRoute
  '/member/activate_account': typeof MemberActivate_accountRoute
  '/member/create_account': typeof MemberCreate_accountRoute
  '/member/dashboard': typeof MemberDashboardRoute
  '/member/forgot_password': typeof MemberForgot_passwordRoute
  '/member/login': typeof MemberLoginRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$': typeof SplatRoute
  '/logout': typeof LogoutRoute
  '/member/activate_account': typeof MemberActivate_accountRoute
  '/member/create_account': typeof MemberCreate_accountRoute
  '/member/dashboard': typeof MemberDashboardRoute
  '/member/forgot_password': typeof MemberForgot_passwordRoute
  '/member/login': typeof MemberLoginRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$'
    | '/logout'
    | '/member/activate_account'
    | '/member/create_account'
    | '/member/dashboard'
    | '/member/forgot_password'
    | '/member/login'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$'
    | '/logout'
    | '/member/activate_account'
    | '/member/create_account'
    | '/member/dashboard'
    | '/member/forgot_password'
    | '/member/login'
  id:
    | '__root__'
    | '/$'
    | '/logout'
    | '/member/activate_account'
    | '/member/create_account'
    | '/member/dashboard'
    | '/member/forgot_password'
    | '/member/login'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  SplatRoute: typeof SplatRoute
  LogoutRoute: typeof LogoutRoute
  MemberActivate_accountRoute: typeof MemberActivate_accountRoute
  MemberCreate_accountRoute: typeof MemberCreate_accountRoute
  MemberDashboardRoute: typeof MemberDashboardRoute
  MemberForgot_passwordRoute: typeof MemberForgot_passwordRoute
  MemberLoginRoute: typeof MemberLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/member/login': {
      id: '/member/login'
      path: '/member/login'
      fullPath: '/member/login'
      preLoaderRoute: typeof MemberLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/member/forgot_password': {
      id: '/member/forgot_password'
      path: '/member/forgot_password'
      fullPath: '/member/forgot_password'
      preLoaderRoute: typeof MemberForgot_passwordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/member/dashboard': {
      id: '/member/dashboard'
      path: '/member/dashboard'
      fullPath: '/member/dashboard'
      preLoaderRoute: typeof MemberDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/member/create_account': {
      id: '/member/create_account'
      path: '/member/create_account'
      fullPath: '/member/create_account'
      preLoaderRoute: typeof MemberCreate_accountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/member/activate_account': {
      id: '/member/activate_account'
      path: '/member/activate_account'
      fullPath: '/member/activate_account'
      preLoaderRoute: typeof MemberActivate_accountRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  SplatRoute: SplatRoute,
  LogoutRoute: LogoutRoute,
  MemberActivate_accountRoute: MemberActivate_accountRoute,
  MemberCreate_accountRoute: MemberCreate_accountRoute,
  MemberDashboardRoute: MemberDashboardRoute,
  MemberForgot_passwordRoute: MemberForgot_passwordRoute,
  MemberLoginRoute: MemberLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
